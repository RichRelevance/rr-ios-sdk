# ENV['IPA_OUTPUT_DIR'] = "Set by build environment"
# ENV['RR_HOCKEYAPP_TOKEN'] = "Set by build environment"

ENV['IPA_OUTPUT_DIR'] ||= ENV['CIRCLE_ARTIFACTS'] || "./build"

fastlane_version "1.85.0"
default_platform :ios

platform :ios do

  # Lanes ----------------------

  before_all do
    if ENV['IPA_OUTPUT_DIR'] && ENV['IPA_OUTPUT_DIR'].length > 0
      sh "rm -rf $IPA_OUTPUT_DIR && mkdir $IPA_OUTPUT_DIR"
    end
  end

  desc "Runs tests"
  lane :test do
    scan(
      output_types: 'junit',
      scheme: 'RichRelevanceSDK',
      output_directory: "#{ENV['CIRCLE_TEST_REPORTS']}",
      buildlog_path: "#{ENV['IPA_OUTPUT_DIR']}",
  )
  end

  desc "Builds and packages enterprise app for the develop server and uploads to Hockey"
  lane :develop do
    unlock_keychain(path: "./Demo/Signing/Raizlabs.keychain", password: ENV['RZ_KEYCHAIN_PASSWORD'])
    build('RichRelevanceSDKDemo', 'enterprise')
    upload_to_hockey('9d1f45347ed74c9092ec4fb5981576c1')
  end
  
  desc "Builds and packages enterprise app for the sprint server and uploads to Hockey"
  lane :sprint do
    unlock_keychain(path: "./Demo/Signing/Raizlabs.keychain", password: ENV['RZ_KEYCHAIN_PASSWORD'])
    build('RichRelevanceSDKDemo', 'enterprise')
    upload_to_hockey('f9e0abcee8723f74a0217fcc11faac02')
  end

# Helpers ----------------------

  def build(scheme, export_method)
    gym(
      output_directory: "#{ENV['IPA_OUTPUT_DIR']}",
      output_name: "RichRelevanceSDKDemo",
      export_method: export_method,
      scheme: scheme,
      include_bitcode: false,
      xcargs: "BUILD_NUMBER=#{build_number}",
      buildlog_path: "#{ENV['IPA_OUTPUT_DIR']}",
    )
  end

  def upload_to_hockey(app_id)
      hockey({
        public_identifier: app_id,
        api_token: ENV['RR_HOCKEYAPP_TOKEN'],
        ipa: "#{ENV['IPA_OUTPUT_DIR']}/RichRelevanceSDKDemo.ipa",
        notify: '0'
      })
  end

  def build_number
    `git rev-list HEAD --count`.chomp()
  end

end
